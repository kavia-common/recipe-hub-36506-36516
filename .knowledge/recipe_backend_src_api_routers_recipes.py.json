{"is_source_file": true, "format": "Python", "description": "Source code for FastAPI route handlers managing recipe entities, including create, read, update, delete (CRUD) operations, with authentication and search functionality.", "external_files": ["src/core/security.py", "src/db/models.py", "src/db/schemas.py", "src/db/session.py"], "external_methods": ["decode_token", "get_db", "oauth2_scheme"], "published": ["router"], "classes": [{"name": "User", "description": "User model used for authentication and ownership."}, {"name": "Recipe", "description": "Recipe model representing recipe data stored in the database."}], "methods": [{"name": "User _get_current_user(db: Session, token: str)", "description": "Retrieves the current user based on the provided token and database session.", "scope": "", "scopeKind": ""}, {"name": "RecipeSchema create_recipe( recipe_in: RecipeCreate, db: Session = Depends(get_db), token: str = Depends(oauth2_scheme), )", "description": "Creates a new recipe associated with the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "List[RecipeSchema] list_recipes( q: Optional[str] = Query(None, description=\"Search query over title/description/tags\"), skip: int = Query(0, ge=0, description=\"Number of records to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max number of records to return\"), db: Session = Depends(get_db), token: Optional[str] = Depends(oauth2_scheme), )", "description": "Lists recipes, optionally filtered by a search query, with pagination support.", "scope": "", "scopeKind": ""}, {"name": "RecipeSchema get_recipe(recipe_id: int, db: Session = Depends(get_db))", "description": "Retrieves a specific recipe by its ID.", "scope": "", "scopeKind": ""}, {"name": "RecipeSchema update_recipe( recipe_id: int, recipe_in: RecipeUpdate, db: Session = Depends(get_db), token: str = Depends(oauth2_scheme), )", "description": "Updates an existing recipe if the current user is the owner.", "scope": "", "scopeKind": ""}, {"name": "None delete_recipe( recipe_id: int, db: Session = Depends(get_db), token: str = Depends(oauth2_scheme), )", "description": "Deletes a recipe if the current user is the owner.", "scope": "", "scopeKind": ""}], "calls": ["decode_token", "get_db", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "HTTPException"], "search-terms": ["recipe CRUD", "FastAPI recipes", "user authentication recipes", "recipe search", "recipe ownership"], "state": 2, "file_id": 12, "knowledge_revision": 28, "git_revision": "", "ctags": [{"_type": "tag", "name": "RecipeSchema", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^from src.db.schemas import Recipe as RecipeSchema, RecipeCreate, RecipeUpdate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:Recipe"}, {"_type": "tag", "name": "_get_current_user", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def _get_current_user(db: Session, token: str) -> User:$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session, token: str)"}, {"_type": "tag", "name": "create_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def create_recipe($/", "language": "Python", "typeref": "typename:RecipeSchema", "kind": "function", "signature": "( recipe_in: RecipeCreate, db: Session = Depends(get_db), token: str = Depends(oauth2_scheme), )"}, {"_type": "tag", "name": "delete_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def delete_recipe($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( recipe_id: int, db: Session = Depends(get_db), token: str = Depends(oauth2_scheme), )"}, {"_type": "tag", "name": "get_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def get_recipe(recipe_id: int, db: Session = Depends(get_db)) -> RecipeSchema:$/", "language": "Python", "typeref": "typename:RecipeSchema", "kind": "function", "signature": "(recipe_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_recipes", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def list_recipes($/", "language": "Python", "typeref": "typename:List[RecipeSchema]", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Search query over title/description/tags\"), skip: int = Query(0, ge=0, description=\"Number of records to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max number of records to return\"), db: Session = Depends(get_db), token: Optional[str] = Depends(oauth2_scheme), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^router = APIRouter(prefix=\"\\/recipes\", tags=[\"Recipes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_recipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-36506-36516/recipe_backend/src/api/routers_recipes.py", "pattern": "/^def update_recipe($/", "language": "Python", "typeref": "typename:RecipeSchema", "kind": "function", "signature": "( recipe_id: int, recipe_in: RecipeUpdate, db: Session = Depends(get_db), token: str = Depends(oauth2_scheme), )"}], "hash": "ac111262a54570e39cd54addfc1b7622", "format-version": 4, "code-base-name": "recipe_backend", "filename": "recipe_backend/src/api/routers_recipes.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/recipes\", tags=[\"Recipes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"28": ""}]}